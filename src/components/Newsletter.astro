<div
	class="p-10 rounded-lg my-20 flex flex-col md:flex-row gap-10 md:gap-20 md:items-end newsletter"
	data-glow
>
	<div class="md:w-2/3 flex flex-col gap-4">
		<h2 class="text-3xl font-display font-medium">
			Subscribe to Astro Weekly ðŸš€
		</h2>
		<p>
			Skyrocket your Astro expertise to new frontiers and beyond with this
			free 5-minute weekly email roundup packed with the latest insights
			and resources from the Astro universe.
		</p>
	</div>
	<div class="w-full">
		<iframe
			src="https://embeds.beehiiv.com/e24be1b9-42a4-4bfb-a43c-c21e8c2aa807?slim=true"
			data-test-id="beehiiv-embed"
			height="52"
			width="100%"
			frameborder="0"
			scrolling="no"
			style="margin: 0; border-radius: 0px !important; background-color: transparent;"
		></iframe>
	</div>
</div>

<script>
	const syncPointer = ({ x, y }) => {
		document.documentElement.style.setProperty("--x", x.toFixed(2));
		document.documentElement.style.setProperty(
			"--xp",
			(x / window.innerWidth).toFixed(2)
		);
		document.documentElement.style.setProperty("--y", y.toFixed(2));
		document.documentElement.style.setProperty(
			"--yp",
			(y / window.innerHeight).toFixed(2)
		);
	};
	document.body.addEventListener("pointermove", syncPointer);
</script>

<style>
	:root {
		--backdrop: hsl(0 0% 60% / 0.12);
		--radius: 14;
		--border: 3;
		--backup-border: var(--backdrop);
		--size: 200;
	}

	.newsletter {
		--base: 80;
		--spread: 500;
		--outer: 1;
	}

	.newsletter {
		border-radius: calc(var(--radius) * 1px);
		position: relative;
		backdrop-filter: blur(calc(var(--cardblur, 5) * 1px));
	}

	/* Glow specific styles */
	[data-glow] {
		--border-size: calc(var(--border, 2) * 1px);
		--spotlight-size: calc(var(--size, 150) * 1px);
		--hue: calc(var(--base) + (var(--xp, 0) * var(--spread, 0)));
		background-image: radial-gradient(
			var(--spotlight-size) var(--spotlight-size) at
				calc(var(--x, 0) * 1px) calc(var(--y, 0) * 1px),
			hsl(
				var(--hue, 210) calc(var(--saturation, 100) * 1%)
					calc(var(--lightness, 70) * 1%) /
					var(--bg-spot-opacity, 0.1)
			),
			transparent
		);
		background-color: var(--backdrop, transparent);
		background-size: calc(100% + (2 * var(--border-size)))
			calc(100% + (2 * var(--border-size)));
		background-position: 50% 50%;
		background-attachment: fixed;
		border: var(--border-size) solid var(--backup-border);
		position: relative;
		touch-action: none;
	}

	[data-glow]::before,
	[data-glow]::after {
		pointer-events: none;
		content: "";
		position: absolute;
		inset: calc(var(--border-size) * -1);
		border: var(--border-size) solid transparent;
		border-radius: calc(var(--radius) * 1px);
		background-attachment: fixed;
		background-size: calc(100% + (2 * var(--border-size)))
			calc(100% + (2 * var(--border-size)));
		background-repeat: no-repeat;
		background-position: 50% 50%;
		mask: linear-gradient(transparent, transparent),
			linear-gradient(white, white);
		mask-clip: padding-box, border-box;
		mask-composite: intersect;
	}

	/* This is the emphasis light */
	[data-glow]::before {
		background-image: radial-gradient(
			calc(var(--spotlight-size) * 0.75)
				calc(var(--spotlight-size) * 0.75) at calc(var(--x, 0) * 1px)
				calc(var(--y, 0) * 1px),
			hsl(
				var(--hue, 210) calc(var(--saturation, 100) * 1%)
					calc(var(--lightness, 50) * 1%) /
					var(--border-spot-opacity, 1)
			),
			transparent 100%
		);
		filter: brightness(2);
	}
	/* This is the spotlight */
	[data-glow]::after {
		background-image: radial-gradient(
			calc(var(--spotlight-size) * 0.5) calc(var(--spotlight-size) * 0.5)
				at calc(var(--x, 0) * 1px) calc(var(--y, 0) * 1px),
			hsl(0 100% 100% / var(--border-light-opacity, 1)),
			transparent 100%
		);
	}
	[data-glow] [data-glow] {
		position: absolute;
		inset: 0;
		will-change: filter;
		opacity: var(--outer, 1);
	}
	[data-glow] > [data-glow] {
		border-radius: calc(var(--radius) * 1px);
		border-width: calc(var(--border-size) * 20);
		filter: blur(calc(var(--border-size) * 10));
		background: none;
		pointer-events: none;
	}
	[data-glow] > [data-glow]::before {
		inset: -10px;
		border-width: 10px;
	}
	[data-glow] [data-glow] {
		border: none;
	}
	[data-glow] :is(a, button) {
		border-radius: calc(var(--radius) * 1px);
		border: var(--border-size) solid transparent;
	}
	[data-glow] :is(a, button) [data-glow] {
		background: none;
	}
	[data-glow] :is(a, button) [data-glow]::before {
		inset: calc(var(--border-size) * -1);
		border-width: calc(var(--border-size) * 1);
	}
</style>
